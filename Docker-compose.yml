# This docker-compose and relative configuation files for these sibling services met up to minimal production state.

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus_data:/prometheus
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
      - '-alertmanager.url=http://alertmanager:9093'
    networks:
      - monitoring
    restart: unless-stopped
  
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    environment:
      - ALERTMANAGER_SMTP_USER=${ALERTMANAGER_SMTP_USER}
      - ALERTMANAGER_SMTP_PASSWORD=${ALERTMANAGER_SMTP_PASSWORD}
    ports:
      - "127.0.0.1:9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false

      # On production Environment, you need to setup https:
      # - GF_SERVER_PROTOCOL=${GF_SERVER_PROTOCOL}
      # - GF_SERVER_CERT_FILE=${GF_SERVER_CERT_FILE}
      # - GF_SERVER_CERT_KEY=${GF_SERVER_CERT_KEY}

      # If you need to send gmail, uncomment and setup these:
      # - GF_SERVER_DOMAIN=${GF_SERVER_DOMAIN}
      # - GF_SMTP_ENABLED=${GF_SMTP_ENABLED}
      # - GF_SMTP_HOST=${GF_SMTP_HOST}
      # - GF_SMTP_USER=${GF_SMTP_USER}
      # - GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
      # - GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS}
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini      # Mount out the Grafana's config file for customization. 
      - ./grafana_data:/var/lib/grafana             # Mount out the Grafana's data, like dashboards,.etc
      - ./ssl:/etc/grafana/ssl                      # Give Grafana SSL key and cert
    networks:
      - monitoring
    restart: unless-stopped

  # This one collect the information about the physical system of host
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "127.0.0.1:9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|/etc)($|/)"'
    networks:
      - monitoring
    restart: unless-stopped


  # This one collect the information about the Docker Deamon that running on host
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    environment:
      - DOCKER_HOST=${CADVISOR_DOCKER_HOST}
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge
